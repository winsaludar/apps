@page "/login"
@layout Layout.AuthLayout
@inject IAuthenticationHttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<PageTitle>APPS - Login</PageTitle>

<article class="lg:w-1/2 xl:w-5/12 p-6 sm:p-12">
    <section class="mt-12 flex flex-col items-center">

        <section class="w-full text-center text-red-700 px-4 py-3 rounded relative mb-16 @(hasError ? "bg-red-100 border border-red-400" : "")" role="alert">
            @if (hasError)
            {
                <ul class="block sm:inline">
                    @foreach (string message in errorMessages)
                    {
                        <li>@message</li>
                    }
                </ul>
            }
        </section>

        <h1 class="text-2xl xl:text-3xl font-extrabold">Login</h1>

        <div class="w-full flex-1 mt-8">
            <section class="flex flex-col items-center">
                <button class="opacity-50 cursor-not-allowed w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-orange-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline"
                        disabled>
                    <div class="bg-white p-2 rounded-full">
                        <svg class="w-4" viewBox="0 0 533.5 544.3">
                            <path d="M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z"
                                  fill="#4285f4" />
                            <path d="M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z"
                                  fill="#34a853" />
                            <path d="M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z"
                                  fill="#fbbc04" />
                            <path d="M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z"
                                  fill="#ea4335" />
                        </svg>
                    </div>
                    <span class="ml-4">Login with Google</span>
                </button>

                <button class="opacity-50 cursor-not-allowed w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-orange-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5"
                        disabled>
                    <div class="bg-white p-1 rounded-full">
                        <svg class="w-6" viewBox="0 0 32 32">
                            <path fillRule="evenodd"
                                  d="M16 4C9.371 4 4 9.371 4 16c0 5.3 3.438 9.8 8.207 11.387.602.11.82-.258.82-.578 0-.286-.011-1.04-.015-2.04-3.34.723-4.043-1.609-4.043-1.609-.547-1.387-1.332-1.758-1.332-1.758-1.09-.742.082-.726.082-.726 1.203.086 1.836 1.234 1.836 1.234 1.07 1.836 2.808 1.305 3.492 1 .11-.777.422-1.305.762-1.605-2.664-.301-5.465-1.332-5.465-5.93 0-1.313.469-2.383 1.234-3.223-.121-.3-.535-1.523.117-3.175 0 0 1.008-.32 3.301 1.23A11.487 11.487 0 0116 9.805c1.02.004 2.047.136 3.004.402 2.293-1.55 3.297-1.23 3.297-1.23.656 1.652.246 2.875.12 3.175.77.84 1.231 1.91 1.231 3.223 0 4.61-2.804 5.621-5.476 5.922.43.367.812 1.101.812 2.219 0 1.605-.011 2.898-.011 3.293 0 .32.214.695.824.578C24.566 25.797 28 21.3 28 16c0-6.629-5.371-12-12-12z" />
                        </svg>
                    </div>
                    <span class="ml-4">Login with GitHub</span>
                </button>
            </section>
        </div>

        <div class="my-12 border-b text-center">
            <div class="leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium transform translate-y-1/2">
                Or login with e-mail
            </div>
        </div>

        <EditForm class="mx-auto max-w-xs" Model="loginModel" OnValidSubmit="HandleLoginAsync" FormName="loginForm">
            <InputText class="w-full px-8 py-4 -lg font-medium border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white"
                       type="email"
                       placeholder="Email"
                       required
                       @bind-Value="loginModel.Email" />
            <InputText class="w-full px-8 py-4 rounded-lg font-medium border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5"
                       type="password"
                       placeholder="Password"
                       required
                       @bind-Value="loginModel.Password" />
            <button class="mt-5 tracking-wide font-semibold bg-orange-500 text-gray-100 w-full py-4 rounded-lg hover:bg-orange-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none"
                    type="submit">
                @if (isLoading)
                {
                    <LoaderIcon />
                }
                else
                {
                    <svg class="w-6 h-6 -ml-2"
                         fill="#FFF"
                         version="1.1"
                         id="Capa_1"
                         xmlns="http://www.w3.org/2000/svg"
                         xmlnsXlink="http://www.w3.org/1999/xlink"
                         viewBox="0 0 471.2 471.2"
                         xmlSpace="preserve">
                        <g>
                            <g>
                                <path d="M396.7,0H74.5C33.4,0,0,33.4,0,74.5v322.2c0,41.1,33.4,74.5,74.5,74.5h322.2c41.1,0,74.5-33.4,74.5-74.5V74.5
			C471.2,33.5,437.7,0,396.7,0z M444.2,396.7c0,26.2-21.3,47.5-47.5,47.5H74.5c-26.2,0-47.5-21.3-47.5-47.5V74.5
			C27,48.3,48.3,27,74.5,27h322.2c26.2,0,47.5,21.3,47.5,47.5V396.7z" />
                                <path d="M283.6,155.6c-5.3-5.3-13.8-5.3-19.1,0c-5.3,5.3-5.3,13.8,0,19.1l47.5,47.5H126.6c-7.5,0-13.5,6-13.5,13.5
			s6,13.5,13.5,13.5H312l-47.4,47.4c-5.3,5.3-5.3,13.8,0,19.1c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4l70.5-70.5c5.3-5.3,5.3-13.8,0-19.1
			L283.6,155.6z" />
                            </g>
                        </g>
                    </svg>
                }
                <span class="ml-3">@(isLoading ? "Logging in..." : "Login")</span>
            </button>
        </EditForm>

        <div class="my-12 text-sm text-center">
            <p class="text-gray-600">
                <NavLink href="/register"
                         class="inline-block px-4 py-2 form-semibold hover:text-orange-500 transition-all duration-300 ease-in-out focus:shadow-outline focus:outline-none">
                    No account yet? Register now
                </NavLink>
            </p>
            <p class="text-gray-600">
                <NavLink href="/forgot-password"
                         class="inline-block px-4 py-2 form-semibold hover:text-orange-500 transition-all duration-300 ease-in-out focus:shadow-outline focus:outline-none">
                    Forgot your password?
                </NavLink>
            </p>
            <p class="text-gray-600">
                <NavLink href="/request-email-confirmation"
                         class="inline-block px-4 py-2 form-semibold hover:text-orange-500 transition-all duration-300 ease-in-out focus:shadow-outline focus:outline-none">
                    Didn&apos;t receive confirmation email? Request a new one
                </NavLink>
            </p>
        </div>
    </section>
</article>

<Sidebar BackgroundImage="/placeholder/login-placeholder.jpg" />

@code {
    public LoginModel loginModel = new();
    private bool hasError = false;
    private IEnumerable<string> errorMessages = new List<string>();
    private bool isLoading = false;

    private async Task HandleLoginAsync()
    {
        ResetUI();
        isLoading = true;

        ClientResponse<TokenDto> response = await HttpClient.LoginAsync(loginModel.Email, loginModel.Password);
        if (!response.IsSuccessful || response.Data is null)
        {
            hasError = true;
            errorMessages = response.Errors;
            isLoading = false;
        }
        else
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).AuthenticateUser(response.Data);
            NavigationManager.NavigateTo("/");
        }
    }

    private void ResetUI()
    {
        hasError = false;
        errorMessages = [];
    }

    public class LoginModel
    {
        public string Email { get; set; } = default!;
        public string Password { get; set; } = default!;
    }
}